/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt {
    quick_tap_ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <225>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_z {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp Q>;
        };

        combo_v {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp V>;
        };

        combo_k {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp K>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp TAB>;
        };

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <1 0>;
        };

        combo_slash {
            bindings = <&kp APOS>;
            key-positions = <8 7>;
        };

        combo_semi {
            bindings = <&kp SEMICOLON>;
            key-positions = <24 25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&hm LSHFT A        &kp W       &kp F            &kp P           &kp B          &kp J       &kp L       &kp U            &kp Y  &hm RSHIFT O
      &kp Z  &hm LCTRL R  &hm LALT S       &hm LGUI T           &kp G          &kp M  &hm RGUI N  &hm RALT E  &hm LS(RCTRL) I     &kp SLASH
                   &kp X       &kp C            &kp D                                      &kp H   &kp COMMA          &kp DOT
                                      &lt NAV_L SPACE  &sk LEFT_SHIFT    &lt 3 ENTER  &lt 2 BSPC
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&kp ESC     &trans  &kp K_REDO   &kp K_UNDO  &trans    &kp PG_UP        &kp HOME  &kp UP_ARROW    &kp END  &trans
 &trans  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &trans    &kp PG_DN  &kp LEFT_ARROW      &kp DOWN  &kp RIGHT  &trans
            &trans      &trans       &trans                               &trans        &trans     &trans
                                     &trans  &trans       &trans          &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&hm LEFT_SHIFT COLON       &kp NUMBER_0        &kp NUMBER_1       &kp NUMBER_2  &bt BT_CLR    &bt BT_NXT       &kp NUMBER_3   &kp NUMBER_4     &kp NUMBER_5  &hm RSHIFT EQUAL
            &kp SEMI  &hm LALT NUMBER_6  &hm LCTRL NUMBER_7  &hm LCMD NUMBER_8   &kp EQUAL    &bt BT_PRV  &hm RGUI NUMBER_9  &hm RALT PLUS  &hm RCTRL MINUS   &hm RSHFT EQUAL
                                  &none               &none              &none                                        &none          &none            &none
                                                                        &kp N0   &kp MINUS        &trans             &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&kp GRAVE  &kp AMPERSAND  &kp ASTERISK   &kp TILDE   &kp PIPE       &kp LESS_THAN  &kp LEFT_PARENTHESIS           &kp RPAR  &kp DOUBLE_QUOTES   &kp BSLH
 &kp EXCL     &kp DOLLAR   &kp PERCENT   &kp CARET   &kp PLUS    &kp GREATER_THAN        &kp LEFT_BRACE    &kp RIGHT_BRACE   &kp SINGLE_QUOTE  &kp SLASH
               &kp COLON   &kp AT_SIGN    &kp HASH                                     &kp LEFT_BRACKET  &kp RIGHT_BRACKET      &kp SEMICOLON
                                        &kp LS(N0)  &kp UNDER              &trans                &trans
            >;
        };
    };
};
